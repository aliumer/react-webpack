npm init -y
npm i express
npm i react react-dom
npm i webpack webpack-cli
npm i babel-loader @babel/core @babel/node @babel/preset-env @babel/preset-react
npm i --save-dev nodemon
npm i -D eslint babel-eslint eslint-plugin-react eslint-plugin-react-hooks

in the route of the project add the following eslint file.
.eslintrc.js
module.exports = {
  parser: 'babel-eslint',
  env: {
    browser: true,
    commonjs: true,
    es6: true,
    node: true,
    jest: true,
  },
  parserOptions: {
    ecmaVersion: 2020,
    ecmaFeatures: {
      impliedStrict: true,
      jsx: true,
    },
    sourceType: 'module',
  },
  plugins: ['react', 'react-hooks'],
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
  ],
  settings: {
    react: {
      version: 'detect',
    },
  },
  rules: {
    // You can do your customizations here...
    // For example, if you don't want to use the prop-types package,
    // you can turn off that recommended rule with: 'react/prop-types': ['off']
  },
};


npm i -D jest babel-jest react-test-renderer

following should be your code structure.
ReactProjectFolder/
  dist/
    main.js
  src/
    index.js
    components/
      App.js
    server/
      server.js

add babel.config.js in the route of the project.
module.exports = {
  presets: ['@babel/preset-env', '@babel/preset-react'],
};


add webpack.config.js in the route of the project
module.exports = {
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
        },
      },
    ],
  },
};

in package.json add script tag
  "scripts": {
    "test": "jest",
    "dev:server": "nodemon --exec babel-node src/server/server.js --ignore dist/",
    "dev:bundler": "webpack -w --mode=development"
  },
